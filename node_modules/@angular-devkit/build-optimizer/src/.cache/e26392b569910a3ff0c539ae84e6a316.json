{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\d3-drag\\src\\drag.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\d3-drag\\src\\drag.js","mtime":1527492764664},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import {dispatch} from \"d3-dispatch\";\r\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\r\nimport nodrag, {yesdrag} from \"./nodrag\";\r\nimport noevent, {nopropagation} from \"./noevent\";\r\nimport constant from \"./constant\";\r\nimport DragEvent from \"./event\";\r\n\r\n// Ignore right-click, since that should open the context menu.\r\nfunction defaultFilter() {\r\n  return !event.button;\r\n}\r\n\r\nfunction defaultContainer() {\r\n  return this.parentNode;\r\n}\r\n\r\nfunction defaultSubject(d) {\r\n  return d == null ? {x: event.x, y: event.y} : d;\r\n}\r\n\r\nfunction defaultTouchable() {\r\n  return \"ontouchstart\" in this;\r\n}\r\n\r\nexport default function() {\r\n  var filter = defaultFilter,\r\n      container = defaultContainer,\r\n      subject = defaultSubject,\r\n      touchable = defaultTouchable,\r\n      gestures = {},\r\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\r\n      active = 0,\r\n      mousedownx,\r\n      mousedowny,\r\n      mousemoving,\r\n      touchending,\r\n      clickDistance2 = 0;\r\n\r\n  function drag(selection) {\r\n    selection\r\n        .on(\"mousedown.drag\", mousedowned)\r\n      .filter(touchable)\r\n        .on(\"touchstart.drag\", touchstarted)\r\n        .on(\"touchmove.drag\", touchmoved)\r\n        .on(\"touchend.drag touchcancel.drag\", touchended)\r\n        .style(\"touch-action\", \"none\")\r\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\r\n  }\r\n\r\n  function mousedowned() {\r\n    if (touchending || !filter.apply(this, arguments)) return;\r\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\r\n    if (!gesture) return;\r\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\r\n    nodrag(event.view);\r\n    nopropagation();\r\n    mousemoving = false;\r\n    mousedownx = event.clientX;\r\n    mousedowny = event.clientY;\r\n    gesture(\"start\");\r\n  }\r\n\r\n  function mousemoved() {\r\n    noevent();\r\n    if (!mousemoving) {\r\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\r\n      mousemoving = dx * dx + dy * dy > clickDistance2;\r\n    }\r\n    gestures.mouse(\"drag\");\r\n  }\r\n\r\n  function mouseupped() {\r\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\r\n    yesdrag(event.view, mousemoving);\r\n    noevent();\r\n    gestures.mouse(\"end\");\r\n  }\r\n\r\n  function touchstarted() {\r\n    if (!filter.apply(this, arguments)) return;\r\n    var touches = event.changedTouches,\r\n        c = container.apply(this, arguments),\r\n        n = touches.length, i, gesture;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\r\n        nopropagation();\r\n        gesture(\"start\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function touchmoved() {\r\n    var touches = event.changedTouches,\r\n        n = touches.length, i, gesture;\r\n\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = gestures[touches[i].identifier]) {\r\n        noevent();\r\n        gesture(\"drag\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function touchended() {\r\n    var touches = event.changedTouches,\r\n        n = touches.length, i, gesture;\r\n\r\n    if (touchending) clearTimeout(touchending);\r\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\r\n    for (i = 0; i < n; ++i) {\r\n      if (gesture = gestures[touches[i].identifier]) {\r\n        nopropagation();\r\n        gesture(\"end\");\r\n      }\r\n    }\r\n  }\r\n\r\n  function beforestart(id, container, point, that, args) {\r\n    var p = point(container, id), s, dx, dy,\r\n        sublisteners = listeners.copy();\r\n\r\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\r\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\r\n      dx = s.x - p[0] || 0;\r\n      dy = s.y - p[1] || 0;\r\n      return true;\r\n    })) return;\r\n\r\n    return function gesture(type) {\r\n      var p0 = p, n;\r\n      switch (type) {\r\n        case \"start\": gestures[id] = gesture, n = active++; break;\r\n        case \"end\": delete gestures[id], --active; // nobreak\r\n        case \"drag\": p = point(container, id), n = active; break;\r\n      }\r\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\r\n    };\r\n  }\r\n\r\n  drag.filter = function(_) {\r\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\r\n  };\r\n\r\n  drag.container = function(_) {\r\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\r\n  };\r\n\r\n  drag.subject = function(_) {\r\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\r\n  };\r\n\r\n  drag.touchable = function(_) {\r\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\r\n  };\r\n\r\n  drag.on = function() {\r\n    var value = listeners.on.apply(listeners, arguments);\r\n    return value === listeners ? drag : value;\r\n  };\r\n\r\n  drag.clickDistance = function(_) {\r\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\r\n  };\r\n\r\n  return drag;\r\n}\r\n",null]}