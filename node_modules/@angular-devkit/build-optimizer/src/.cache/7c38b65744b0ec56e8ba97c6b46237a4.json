{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\utils\\debounce.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\utils\\debounce.js","mtime":1527492758777},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["/**\r\n * Debounce a function\r\n * @param  {any}     func      function to executoe\r\n * @param  {number}  wait      wait duration\r\n * @param  {boolean} immediate wait or immediate executue\r\n */\r\nexport function debounce(func, wait, immediate) {\r\n    var timeout;\r\n    var args;\r\n    var context;\r\n    var timestamp;\r\n    var result;\r\n    return function () {\r\n        context = this;\r\n        args = arguments;\r\n        timestamp = new Date();\r\n        function later() {\r\n            var last = +new Date() - timestamp;\r\n            if (last < wait) {\r\n                timeout = setTimeout(later, wait - last);\r\n            }\r\n            else {\r\n                timeout = null;\r\n                if (!immediate) {\r\n                    result = func.apply(context, args);\r\n                }\r\n            }\r\n        }\r\n        var callNow = immediate && !timeout;\r\n        if (!timeout) {\r\n            timeout = setTimeout(later, wait);\r\n        }\r\n        if (callNow) {\r\n            result = func.apply(context, args);\r\n        }\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Debounce decorator\r\n *\r\n *  class MyClass {\r\n *    debounceable(10)\r\n *    myFn() { ... }\r\n *  }\r\n */\r\nexport function debounceable(duration, immediate) {\r\n    return function innerDecorator(target, key, descriptor) {\r\n        return {\r\n            configurable: true,\r\n            enumerable: descriptor.enumerable,\r\n            get: function getter() {\r\n                Object.defineProperty(this, key, {\r\n                    configurable: true,\r\n                    enumerable: descriptor.enumerable,\r\n                    value: debounce(descriptor.value, duration, immediate)\r\n                });\r\n                return this[key];\r\n            }\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=debounce.js.map",null]}