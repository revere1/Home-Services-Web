{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\long-press\\long-press-button.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\long-press\\long-press-button.component.js","mtime":1527490594535},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, ViewEncapsulation, HostBinding, } from '@angular/core';\nimport { trigger, state, style, animate, transition } from '@angular/animations';\nvar LongPressButtonComponent = /*@__PURE__*/ (function () {\n    function LongPressButtonComponent() {\n        this.disabled = false;\n        this.duration = 3000;\n        this.icon = 'mouse-hold';\n        this.submitted = false;\n        this.active = true;\n        this._disabled = false;\n        this.longPress = new EventEmitter();\n        this.pressed = false;\n        this._state = 'active';\n    }\n    LongPressButtonComponent.prototype.getState = function () {\n        if (this.state) {\n            return this.state;\n        }\n        return this._state;\n    };\n    LongPressButtonComponent.prototype.ngOnInit = function () {\n        this.updateState();\n    };\n    LongPressButtonComponent.prototype.ngOnChanges = function () {\n        this._disabled = this.disabled;\n        this.updateState();\n    };\n    LongPressButtonComponent.prototype.updateState = function () {\n        var _this = this;\n        var currentState = this.getState();\n        if (!currentState) {\n            this._state = 'active';\n        }\n        this.submitted = false;\n        this.active = false;\n        switch (currentState) {\n            case 'submitted':\n                this.submitted = true;\n                break;\n            default:\n                this.active = true;\n                break;\n        }\n        if (this.submitted) {\n            this._disabled = true;\n            clearTimeout(this.lastTimeout);\n            this.lastTimeout = setTimeout(function () {\n                _this._state = 'active';\n                _this._disabled = _this.disabled;\n                _this.updateState();\n            }, 3000);\n        }\n    };\n    LongPressButtonComponent.prototype.onLongPressStart = function (event) {\n        if (!this._disabled) {\n            this.pressed = true;\n        }\n    };\n    LongPressButtonComponent.prototype.onLongPressFinish = function (event) {\n        if (!this._disabled) {\n            this.pressed = false;\n            this.longPress.emit(event);\n            this._state = 'submitted';\n            this.updateState();\n        }\n    };\n    LongPressButtonComponent.prototype.onLongPressCancel = function (event) {\n        this.pressed = false;\n    };\n    return LongPressButtonComponent;\n}());\nexport { LongPressButtonComponent };\n//# sourceMappingURL=long-press-button.component.js.map\n",null]}