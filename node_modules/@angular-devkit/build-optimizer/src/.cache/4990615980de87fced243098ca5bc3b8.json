{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\dropdown\\dropdown.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\dropdown\\dropdown.component.js","mtime":1527492758361},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, ContentChild, HostBinding, Renderer2, ViewEncapsulation, ChangeDetectorRef } from '@angular/core';\nimport { DropdownMenuDirective } from './dropdown-menu.directive';\nimport { DropdownToggleDirective } from './dropdown-toggle.directive';\n/**\n * Dropdown control\n *\n *  <ngx-dropdown>\n *    <ngx-dropdown-toggle>Button</dropdown-toggle>\n *    <ngx-dropdown-menu class=\"pull-right\">\n *      <ul><li><a>...</a></li></ul>\n *    </ngx-dropdown-menu>\n *  </ngx-dropdown>\n *\n */\nvar DropdownComponent = /*@__PURE__*/ (function () {\n    function DropdownComponent(renderer, cd) {\n        this.renderer = renderer;\n        this.cd = cd;\n        this.open = false;\n        this.showCaret = false;\n        this.closeOnClick = true;\n        this.closeOnOutsideClick = true;\n        this.trigger = 'click';\n    }\n    DropdownComponent.prototype.ngAfterContentInit = function () {\n        var _this = this;\n        this.dropdownToggle.toggle.subscribe(function (ev) { return _this.onToggleClick(ev); });\n    };\n    DropdownComponent.prototype.ngOnDestroy = function () {\n        if (this.documentListener)\n            this.documentListener();\n    };\n    DropdownComponent.prototype.onDocumentClick = function (_a) {\n        var target = _a.target;\n        if (this.open && this.closeOnOutsideClick) {\n            var isToggling = this.dropdownToggle.element.contains(target);\n            var isMenuClick = !this.closeOnClick && this.dropdownMenu.element.contains(target);\n            if (!isToggling && !isMenuClick) {\n                this.open = false;\n                if (this.documentListener)\n                    this.documentListener();\n                this.cd.markForCheck();\n            }\n        }\n    };\n    DropdownComponent.prototype.onToggleClick = function (ev) {\n        var _this = this;\n        if (!this.dropdownToggle.disabled) {\n            this.open = !this.open;\n            if (this.open) {\n                this.documentListener = this.renderer.listen(document, 'click', function ($event) { return _this.onDocumentClick($event); });\n            }\n            else if (this.documentListener) {\n                this.documentListener();\n            }\n        }\n    };\n    __decorate([\n        Input(),\n        HostBinding('class.open'),\n        __metadata(\"design:type\", Boolean)\n    ], DropdownComponent.prototype, \"open\", void 0);\n    __decorate([\n        Input(),\n        HostBinding('class.has-caret'),\n        __metadata(\"design:type\", Boolean)\n    ], DropdownComponent.prototype, \"showCaret\", void 0);\n    return DropdownComponent;\n}());\nexport { DropdownComponent };\n//# sourceMappingURL=dropdown.component.js.map\n",null]}