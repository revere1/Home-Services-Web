{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\ng2-breadcrumbs\\lib\\breadcrumbs.service.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\ng2-breadcrumbs\\lib\\breadcrumbs.service.js","mtime":1527492778056},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar BreadcrumbsService = /*@__PURE__*/ (function () {\n    function BreadcrumbsService() {\n        this.prefixedBreadcrumbs = [];\n        this.breadcrumbs = [];\n        this.breadcrumbsSource = new rxjs_1.Subject();\n        this.breadcrumbsChanged$ = this.breadcrumbsSource.asObservable();\n        if (localStorage.getItem('prefixedBreadcrumbs') != null) {\n            this.prefixedBreadcrumbs = (JSON.parse(localStorage.getItem('prefixedBreadcrumbs')));\n        }\n    }\n    //Store the breadcrumbs of the current route\n    BreadcrumbsService.prototype.store = function (breadcrumbs) {\n        this.breadcrumbs = breadcrumbs;\n        var allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n    };\n    // Add a prefixed breadcrumb\n    BreadcrumbsService.prototype.storePrefixed = function (breadcrumb) {\n        this.storeIfUnique(breadcrumb);\n        localStorage.setItem('prefixedBreadcrumbs', JSON.stringify(this.prefixedBreadcrumbs));\n        var allBreadcrumbs = this.prefixedBreadcrumbs.concat(this.breadcrumbs);\n        this.breadcrumbsSource.next(allBreadcrumbs);\n    };\n    //Return the breadcrumbs\n    BreadcrumbsService.prototype.get = function () {\n        return this.breadcrumbsChanged$;\n    };\n    // storeIfUnique checks if there are any duplicate prefixed breadcrumbs\n    BreadcrumbsService.prototype.storeIfUnique = function (newBreadcrumb) {\n        var isUnique = true;\n        for (var _i = 0, _a = this.prefixedBreadcrumbs; _i < _a.length; _i++) {\n            var crumb = _a[_i];\n            if (newBreadcrumb.url == crumb.url) {\n                isUnique = false;\n                break;\n            }\n        }\n        if (isUnique) {\n            this.prefixedBreadcrumbs.push(newBreadcrumb);\n        }\n    };\n    BreadcrumbsService.decorators = [\n        { type: core_1.Injectable },\n    ];\n    return BreadcrumbsService;\n}());\nexports.BreadcrumbsService = BreadcrumbsService;\n",null]}