{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\tabs\\tabs.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\tabs\\tabs.component.js","mtime":1527490598261},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, ContentChildren, QueryList, EventEmitter, ViewEncapsulation } from '@angular/core';\nimport { TabComponent } from './tab.component';\nvar TabsComponent = /*@__PURE__*/ (function () {\n    function TabsComponent() {\n        this.select = new EventEmitter();\n    }\n    Object.defineProperty(TabsComponent.prototype, \"index\", {\n        get: function () {\n            var tabs = this.tabs.toArray();\n            return tabs.findIndex(function (tab) { return tab.active; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    TabsComponent.prototype.ngAfterContentInit = function () {\n        var tabs = this.tabs.toArray();\n        var actives = this.tabs.filter(function (t) { return t.active; });\n        if (actives.length > 1) {\n            console.error(\"Multiple active tabs set 'active'\");\n        }\n        else if (!actives.length && tabs.length) {\n            tabs[0].active = true;\n        }\n    };\n    TabsComponent.prototype.tabClicked = function (activeTab) {\n        var tabs = this.tabs.toArray();\n        tabs.forEach(function (tab) { return tab.active = false; });\n        activeTab.active = true;\n        this.select.emit(activeTab);\n    };\n    TabsComponent.prototype.move = function (offset) {\n        var tabs = this.tabs.toArray();\n        for (var i = this.index + offset; i < tabs.length && i >= 0; i += offset) {\n            var tab = tabs[i];\n            if (tab && !tab.disabled) {\n                this.tabClicked(tabs[i]);\n                return;\n            }\n        }\n    };\n    TabsComponent.prototype.next = function () {\n        this.move(1);\n    };\n    TabsComponent.prototype.prev = function () {\n        this.move(-1);\n    };\n    return TabsComponent;\n}());\nexport { TabsComponent };\n//# sourceMappingURL=tabs.component.js.map\n",null]}