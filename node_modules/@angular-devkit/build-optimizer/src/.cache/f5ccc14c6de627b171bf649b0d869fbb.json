{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\button\\file-button.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\button\\file-button.component.js","mtime":1527490561806},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, NgZone, ViewEncapsulation, ContentChild, TemplateRef, ViewChild, ElementRef } from '@angular/core';\nimport { FileUploader } from 'ng2-file-upload';\nimport { FileButtonStyleType } from './file-button-style.type';\nvar nextId = 0;\nvar FileButtonComponent = /*@__PURE__*/ (function () {\n    function FileButtonComponent(ngZone) {\n        this.ngZone = ngZone;\n        this.id = \"input-\" + ++nextId;\n        this.styleType = FileButtonStyleType.standard;\n        this.afterAddingFile = new EventEmitter();\n        this.beforeUploadItem = new EventEmitter();\n        this.successItem = new EventEmitter();\n        this.errorItem = new EventEmitter();\n        this.progressAll = new EventEmitter();\n        this.isItemSuccessful = false;\n        this.progress = '0%';\n        this.fileName = '';\n        this.fileOverDropzone = false;\n    }\n    Object.defineProperty(FileButtonComponent.prototype, \"isDisabled\", {\n        get: function () {\n            return this.disabled || this.uploader.isUploading;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(FileButtonComponent.prototype, \"cssClasses\", {\n        get: function () {\n            return {\n                'ngx-file-button': true,\n                'standard-style': this.styleType === FileButtonStyleType.standard,\n                'progress-style': this.styleType === FileButtonStyleType.progress,\n                'show-progress': this.uploader && this.uploader.options.isHTML5,\n                success: this.isItemSuccessful,\n                active: this.uploader && this.uploader.isUploading\n            };\n        },\n        enumerable: true,\n        configurable: true\n    });\n    FileButtonComponent.prototype.ngOnInit = function () {\n        var _this = this;\n        this.ngZone.run(function () {\n            if (!_this.uploader && !_this.options) {\n                throw new Error('You must pass either an uploader instance or options.');\n            }\n            // if options were passed, init a new uploader\n            if (!_this.uploader && _this.options) {\n                _this.uploader = new FileUploader(_this.options);\n            }\n            // always remove after upload for this case\n            _this.uploader.options.removeAfterUpload = true;\n            _this.uploader.onAfterAddingFile = _this.onAfterAddingFile.bind(_this);\n            _this.uploader.onBeforeUploadItem = _this.onBeforeUploadItem.bind(_this);\n            _this.uploader.onProgressAll = _this.onProgressAll.bind(_this);\n            _this.uploader.onSuccessItem = _this.onSuccessItem.bind(_this);\n            _this.uploader.onErrorItem = _this.onErrorItem.bind(_this);\n        });\n    };\n    FileButtonComponent.prototype.onAfterAddingFile = function (fileItem) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.fileName = fileItem.file.name;\n            _this.afterAddingFile.emit({ fileItem: fileItem });\n        });\n    };\n    FileButtonComponent.prototype.onBeforeUploadItem = function (fileItem) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.beforeUploadItem.emit({ fileItem: fileItem });\n        });\n    };\n    FileButtonComponent.prototype.onErrorItem = function (response, status, headers) {\n        this.errorItem.emit({ response: response, status: status, headers: headers });\n    };\n    FileButtonComponent.prototype.onProgressAll = function (progress) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.progress = progress + '%';\n            _this.progressAll.emit({ progress: progress });\n        });\n    };\n    FileButtonComponent.prototype.onSuccessItem = function (item, response, status, headers) {\n        var _this = this;\n        this.ngZone.run(function () {\n            _this.isItemSuccessful = true;\n            setTimeout(function () {\n                _this.fileName = '';\n                _this.isItemSuccessful = false;\n            }, 2500);\n            _this.successItem.emit({ item: item, response: response, status: status, headers: headers });\n        });\n    };\n    FileButtonComponent.prototype.fileOverBase = function (event) {\n        this.fileOverDropzone = event;\n    };\n    FileButtonComponent.prototype.clearInput = function () {\n        this.fileInput.nativeElement.value = '';\n    };\n    return FileButtonComponent;\n}());\nexport { FileButtonComponent };\n//# sourceMappingURL=file-button.component.js.map\n",null]}