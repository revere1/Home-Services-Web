{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\calendar\\calendar.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\calendar\\calendar.component.js","mtime":1527490563540},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, forwardRef, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport * as moment from 'moment';\nimport { getMonth } from './calendar-utils';\nvar CALENDAR_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CalendarComponent; }),\n    multi: true\n};\nvar CalendarComponent = /*@__PURE__*/ (function () {\n    function CalendarComponent() {\n        this.daysOfWeek = ['S', 'M', 'T', 'W', 'T', 'F', 'S'];\n        this.change = new EventEmitter();\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n        this.onChangeCallback = function () {\n            // placeholder\n        };\n    }\n    Object.defineProperty(CalendarComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (val) {\n            var isSame = moment(val).isSame(this._value, 'day');\n            if (!isSame) {\n                this._value = val;\n                this.onChangeCallback(this._value);\n                this.change.emit(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CalendarComponent.prototype.ngOnInit = function () {\n        this.activeDate = moment(this.value);\n        this.weeks = getMonth(this.activeDate);\n    };\n    CalendarComponent.prototype.getDayActive = function (date) {\n        return date.isSame(this.value, 'day');\n    };\n    CalendarComponent.prototype.getDayDisabled = function (date) {\n        if (this.disabled)\n            return true;\n        if (!date)\n            return false;\n        var isBeforeMin = this.minDate && date.isSameOrBefore(this.minDate);\n        var isAfterMax = this.maxDate && date.isSameOrAfter(this.maxDate);\n        return isBeforeMin || isAfterMax;\n    };\n    CalendarComponent.prototype.onDayClick = function (day) {\n        this.value = day.date.clone().toDate();\n        if (day.prevMonth) {\n            this.prevMonth();\n        }\n        else if (day.nextMonth) {\n            this.nextMonth();\n        }\n    };\n    CalendarComponent.prototype.prevMonth = function () {\n        var date = this.activeDate.clone();\n        this.activeDate = date.subtract(1, 'month');\n        this.weeks = getMonth(this.activeDate);\n    };\n    CalendarComponent.prototype.nextMonth = function () {\n        var date = this.activeDate.clone();\n        this.activeDate = date.add(1, 'month');\n        this.weeks = getMonth(this.activeDate);\n    };\n    CalendarComponent.prototype.writeValue = function (val) {\n        this.activeDate = moment(val);\n        this.weeks = getMonth(this.activeDate);\n        var isSame = this.activeDate.isSame(this.value, 'day');\n        if (!isSame) {\n            this._value = val;\n        }\n    };\n    CalendarComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    CalendarComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    return CalendarComponent;\n}());\nexport { CalendarComponent };\n//# sourceMappingURL=calendar.component.js.map\n",null]}