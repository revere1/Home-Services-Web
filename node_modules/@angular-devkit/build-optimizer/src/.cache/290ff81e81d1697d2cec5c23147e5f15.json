{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\angular2-moment\\time-ago.pipe.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\angular2-moment\\time-ago.pipe.js","mtime":1527492759808},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["\"use strict\";\nvar __decorate = /*@__PURE__*/ require(\"tslib\").__decorate;\nvar __metadata = /*@__PURE__*/ require(\"tslib\").__metadata;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar core_1 = require(\"@angular/core\");\nvar moment = require(\"moment\");\n// under systemjs, moment is actually exported as the default export, so we account for that\nvar momentConstructor = moment.default || moment;\nvar TimeAgoPipe = /*@__PURE__*/ (function () {\n    function TimeAgoPipe(cdRef, ngZone) {\n        this.cdRef = cdRef;\n        this.ngZone = ngZone;\n    }\n    TimeAgoPipe.prototype.transform = function (value, omitSuffix) {\n        if (this.hasChanged(value, omitSuffix)) {\n            this.lastTime = this.getTime(value);\n            this.lastValue = value;\n            this.lastOmitSuffix = omitSuffix;\n            this.lastLocale = this.getLocale(value);\n            this.removeTimer();\n            this.createTimer();\n            this.lastText = momentConstructor(value).from(momentConstructor(), omitSuffix);\n        }\n        else {\n            this.createTimer();\n        }\n        return this.lastText;\n    };\n    TimeAgoPipe.prototype.ngOnDestroy = function () {\n        this.removeTimer();\n    };\n    TimeAgoPipe.prototype.createTimer = function () {\n        var _this = this;\n        if (this.currentTimer) {\n            return;\n        }\n        var momentInstance = momentConstructor(this.lastValue);\n        var timeToUpdate = this.getSecondsUntilUpdate(momentInstance) * 1000;\n        this.currentTimer = this.ngZone.runOutsideAngular(function () {\n            if (typeof window !== 'undefined') {\n                return window.setTimeout(function () {\n                    _this.lastText = momentConstructor(_this.lastValue).from(momentConstructor(), _this.lastOmitSuffix);\n                    _this.currentTimer = null;\n                    _this.ngZone.run(function () { return _this.cdRef.markForCheck(); });\n                }, timeToUpdate);\n            }\n        });\n    };\n    TimeAgoPipe.prototype.removeTimer = function () {\n        if (this.currentTimer) {\n            window.clearTimeout(this.currentTimer);\n            this.currentTimer = null;\n        }\n    };\n    TimeAgoPipe.prototype.getSecondsUntilUpdate = function (momentInstance) {\n        var howOld = Math.abs(momentConstructor().diff(momentInstance, 'minute'));\n        if (howOld < 1) {\n            return 1;\n        }\n        else if (howOld < 60) {\n            return 30;\n        }\n        else if (howOld < 180) {\n            return 300;\n        }\n        else {\n            return 3600;\n        }\n    };\n    TimeAgoPipe.prototype.hasChanged = function (value, omitSuffix) {\n        return this.getTime(value) !== this.lastTime\n            || this.getLocale(value) !== this.lastLocale\n            || omitSuffix !== this.lastOmitSuffix;\n    };\n    TimeAgoPipe.prototype.getTime = function (value) {\n        if (moment.isDate(value)) {\n            return value.getTime();\n        }\n        else if (moment.isMoment(value)) {\n            return value.valueOf();\n        }\n        else {\n            return momentConstructor(value).valueOf();\n        }\n    };\n    TimeAgoPipe.prototype.getLocale = function (value) {\n        return moment.isMoment(value) ? value.locale() : null;\n    };\n    TimeAgoPipe = __decorate([\n        core_1.Pipe({ name: 'amTimeAgo', pure: false })\n    ], TimeAgoPipe);\n    return TimeAgoPipe;\n}());\nexports.TimeAgoPipe = TimeAgoPipe;\n",null]}