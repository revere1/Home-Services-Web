{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\utils\\debounce.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\utils\\debounce.js","mtime":1527490621646},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["/**\n * Debounce a function\n * @param  {any}     func      function to executoe\n * @param  {number}  wait      wait duration\n * @param  {boolean} immediate wait or immediate executue\n */\nexport function debounce(func, wait, immediate) {\n    var timeout;\n    var args;\n    var context;\n    var timestamp;\n    var result;\n    return function () {\n        context = this;\n        args = arguments;\n        timestamp = new Date();\n        function later() {\n            var last = +new Date() - timestamp;\n            if (last < wait) {\n                timeout = setTimeout(later, wait - last);\n            }\n            else {\n                timeout = null;\n                if (!immediate) {\n                    result = func.apply(context, args);\n                }\n            }\n        }\n        var callNow = immediate && !timeout;\n        if (!timeout) {\n            timeout = setTimeout(later, wait);\n        }\n        if (callNow) {\n            result = func.apply(context, args);\n        }\n        return result;\n    };\n}\n/**\n * Debounce decorator\n *\n *  class MyClass {\n *    debounceable(10)\n *    myFn() { ... }\n *  }\n */\nexport function debounceable(duration, immediate) {\n    return function innerDecorator(target, key, descriptor) {\n        return {\n            configurable: true,\n            enumerable: descriptor.enumerable,\n            get: function getter() {\n                Object.defineProperty(this, key, {\n                    configurable: true,\n                    enumerable: descriptor.enumerable,\n                    value: debounce(descriptor.value, duration, immediate)\n                });\n                return this[key];\n            }\n        };\n    };\n}\n//# sourceMappingURL=debounce.js.map",null]}