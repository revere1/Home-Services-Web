{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\pipes\\filter.pipe.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\pipes\\filter.pipe.js","mtime":1527490620250},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { Pipe, Injectable } from '@angular/core';\n/**\n * Filter Pipe\n * A pipe like the old-school ng1 pipe. Use this with\n * moderation since it has performance issues.\n *\n * References:\n *  - https://github.com/VadimDez/ng2-filter-pipe\n *  - https://angular.io/docs/ts/latest/guide/pipes.html\n *\n * Example:\n *\n *    <input type=\"text\" [(ngModel)]=\"stringFilter\">\n *    <ul>\n *      <li *ngFor=\"let item of array | filterBy: stringFilter\"></li>\n *    </ul>\n *\n */\nvar FilterPipe = /*@__PURE__*/ (function () {\n    function FilterPipe() {\n    }\n    FilterPipe.prototype.transform = function (array, filter) {\n        var type = typeof filter;\n        if (type === 'string') {\n            if (this.isNumber(filter)) {\n                return array.filter(this.filterDefault(filter));\n            }\n            return array.filter(this.filterByString(filter));\n        }\n        if (type === 'object') {\n            return array.filter(this.filterByObject(filter));\n        }\n        return array.filter(this.filterDefault(filter));\n    };\n    FilterPipe.prototype.filterByString = function (filter) {\n        filter = filter.toLowerCase();\n        return function (value) {\n            return !filter || value.toLowerCase().indexOf(filter) !== -1;\n        };\n    };\n    FilterPipe.prototype.filterByObject = function (filter) {\n        var _this = this;\n        return function (value) {\n            for (var key in filter) {\n                if (!value.hasOwnProperty(key)) {\n                    return false;\n                }\n                var type = typeof value[key];\n                var isMatching = void 0;\n                /* tslint:disable prefer-conditional-expression */\n                if (type === 'string') {\n                    isMatching = _this.filterByString(filter[key])(value[key]);\n                }\n                else if (type === 'object') {\n                    isMatching = _this.filterByObject(filter[key])(value[key]);\n                }\n                else {\n                    isMatching = _this.filterDefault(filter[key])(value[key]);\n                }\n                /* tslint:enable prefer-conditional-expression */\n                if (!isMatching) {\n                    return false;\n                }\n            }\n            return true;\n        };\n    };\n    /**\n     * Defatul filterDefault function\n     *\n     * @param filter\n     * @returns {(value:any)=>boolean}\n     */\n    FilterPipe.prototype.filterDefault = function (filter) {\n        return function (value) {\n            return !filter || filter === value;\n        };\n    };\n    FilterPipe.prototype.isNumber = function (value) {\n        return !isNaN(parseInt(value, 10)) && isFinite(value);\n    };\n    return FilterPipe;\n}());\nexport { FilterPipe };\n//# sourceMappingURL=filter.pipe.js.map\n",null]}