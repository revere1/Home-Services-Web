{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\radiobutton\\radiobutton-group.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\radiobutton\\radiobutton-group.component.js","mtime":1527490595609},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, EventEmitter, Output, forwardRef, HostBinding, ViewEncapsulation, ContentChildren, QueryList } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RadioButtonComponent } from './radiobutton.component';\nvar RADIOGROUP_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioButtonGroupComponent; }),\n    multi: true\n};\nvar nextId = 0;\nvar RadioButtonGroupComponent = /*@__PURE__*/ (function () {\n    function RadioButtonGroupComponent() {\n        this._uniqueId = \"ngx-radio-group-\" + ++nextId;\n        this.id = this._uniqueId;\n        this.tabindex = 0;\n        this.disabled = false;\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this._name = this._uniqueId;\n        this._value = false;\n        this.onChangeCallback = function (_) {\n            // placeholder\n        };\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n    }\n    Object.defineProperty(RadioButtonGroupComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this._value !== value) {\n                this._value = value;\n                this._updateSelectedRadioFromValue();\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioButtonGroupComponent.prototype, \"name\", {\n        get: function () {\n            return this._name;\n        },\n        set: function (value) {\n            if (this._name !== value) {\n                this._updateRadioButtonNames();\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioButtonGroupComponent.prototype, \"selected\", {\n        get: function () {\n            return this._selected;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadioButtonGroupComponent.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    RadioButtonGroupComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    RadioButtonGroupComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    RadioButtonGroupComponent.prototype._updateRadioButtonNames = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.name = _this.name;\n            });\n        }\n    };\n    RadioButtonGroupComponent.prototype._updateSelectedRadioFromValue = function () {\n        var _this = this;\n        if (this._radios) {\n            this._radios.forEach(function (radio) {\n                radio.checked = _this.value === radio.value;\n                if (radio.checked) {\n                    _this._selected = radio;\n                }\n            });\n        }\n    };\n    __decorate([\n        HostBinding('class.disabled'),\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], RadioButtonGroupComponent.prototype, \"disabled\", void 0);\n    return RadioButtonGroupComponent;\n}());\nexport { RadioButtonGroupComponent };\n//# sourceMappingURL=radiobutton-group.component.js.map\n",null]}