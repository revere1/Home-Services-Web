{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\slider\\slider.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\slider\\slider.component.js","mtime":1527492758453},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, HostListener, HostBinding, forwardRef, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar nextId = 0;\nvar SLIDER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return SliderComponent; }),\n    multi: true\n};\nvar SliderComponent = /*@__PURE__*/ (function () {\n    function SliderComponent() {\n        this.id = \"range-\" + ++nextId;\n        this.min = 0;\n        this.max = 100;\n        this.step = 1;\n        this.orientation = 'horizontal';\n        this.filled = false;\n        // Not supported in all\n        // browers see polyfill\n        // http://leaverou.github.io/multirange/\n        this.multiple = false;\n        this.showTicks = false;\n        this.count = [];\n        this.change = new EventEmitter();\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n        this.onChangeCallback = function () {\n            // placeholder\n        };\n    }\n    Object.defineProperty(SliderComponent.prototype, \"value\", {\n        get: function () {\n            if (!this._value)\n                return 0;\n            if (!this._value.join)\n                return this._value;\n            return this._value.join(',');\n        },\n        set: function (val) {\n            if (val !== this._value) {\n                this._value = val;\n                this.onChangeCallback(this._value);\n                this.change.emit({\n                    value: this.value,\n                    percent: this.percent\n                });\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderComponent.prototype, \"isFilled\", {\n        get: function () {\n            return this.filled;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderComponent.prototype, \"isHorizontal\", {\n        get: function () {\n            return this.orientation === 'horizontal';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderComponent.prototype, \"isVertical\", {\n        get: function () {\n            return this.orientation === 'vertical';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderComponent.prototype, \"isActive\", {\n        get: function () {\n            return this.active;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SliderComponent.prototype, \"percent\", {\n        get: function () {\n            return Math.round(100 * (this.value - this.min) / (this.max - this.min));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SliderComponent.prototype.ngOnInit = function () {\n        if (this.showTicks) {\n            this.count = this.getCount();\n        }\n    };\n    SliderComponent.prototype.getCount = function () {\n        var idxs = [];\n        var step = this.tickStep || this.step;\n        var i = this.min;\n        while (i <= this.max) {\n            idxs.push(i);\n            i += step;\n        }\n        return idxs;\n    };\n    SliderComponent.prototype.getFill = function () {\n        if (this.filled) {\n            var size = this.isHorizontal ?\n                this.percent + \"% 100%\" :\n                \"100% \" + this.percent + \"%\";\n            return {\n                'background-size': size\n            };\n        }\n    };\n    SliderComponent.prototype.onMouseDown = function () {\n        event.stopPropagation();\n        this.active = true;\n    };\n    SliderComponent.prototype.onMouseUp = function () {\n        event.stopPropagation();\n        this.active = false;\n    };\n    SliderComponent.prototype.onChange = function (event) {\n        event.stopPropagation();\n        this.change.emit({\n            value: this.value,\n            percent: this.percent\n        });\n    };\n    SliderComponent.prototype.writeValue = function (val) {\n        if (val !== this._value) {\n            this._value = val;\n        }\n    };\n    SliderComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    SliderComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    return SliderComponent;\n}());\nexport { SliderComponent };\n//# sourceMappingURL=slider.component.js.map\n",null]}