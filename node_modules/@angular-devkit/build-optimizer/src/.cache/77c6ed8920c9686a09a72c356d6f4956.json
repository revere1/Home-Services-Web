{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\bubble-chart\\bubble-chart.utils.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\bubble-chart\\bubble-chart.utils.js","mtime":1527492757394},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { scaleLinear, scalePoint, scaleTime } from 'd3-scale';\r\nexport function getScaleType(values) {\r\n    var date = true;\r\n    var num = true;\r\n    for (var _i = 0, values_1 = values; _i < values_1.length; _i++) {\r\n        var value = values_1[_i];\r\n        if (!isDate(value)) {\r\n            date = false;\r\n        }\r\n        if (typeof value !== 'number') {\r\n            num = false;\r\n        }\r\n    }\r\n    if (date)\r\n        return 'time';\r\n    if (num)\r\n        return 'linear';\r\n    return 'ordinal';\r\n}\r\nfunction isDate(value) {\r\n    if (value instanceof Date) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\nexport function getDomain(values, scaleType, autoScale, minVal, maxVal) {\r\n    var domain = [];\r\n    if (scaleType === 'linear') {\r\n        values = values.map(function (v) { return Number(v); });\r\n        if (!autoScale) {\r\n            values.push(0);\r\n        }\r\n    }\r\n    if (scaleType === 'time' || scaleType === 'linear') {\r\n        var min = minVal ? minVal : Math.min.apply(Math, values);\r\n        var max = maxVal ? maxVal : Math.max.apply(Math, values);\r\n        domain = [min, max];\r\n    }\r\n    else {\r\n        domain = values;\r\n    }\r\n    return domain;\r\n}\r\nexport function getScale(domain, range, scaleType, roundDomains) {\r\n    var scale;\r\n    if (scaleType === 'time') {\r\n        scale = scaleTime()\r\n            .range(range)\r\n            .domain(domain);\r\n    }\r\n    else if (scaleType === 'linear') {\r\n        scale = scaleLinear()\r\n            .range(range)\r\n            .domain(domain);\r\n        if (roundDomains) {\r\n            scale = scale.nice();\r\n        }\r\n    }\r\n    else if (scaleType === 'ordinal') {\r\n        scale = scalePoint()\r\n            .range([range[0], range[1]])\r\n            .domain(domain);\r\n    }\r\n    return scale;\r\n}\r\n//# sourceMappingURL=bubble-chart.utils.js.map",null]}