{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\hotkeys\\hotkeys.service.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\hotkeys\\hotkeys.service.js","mtime":1527492758369},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n        s = arguments[i];\n        for (var p in s)\n            if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n    }\n    return t;\n};\nimport { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Injectable, NgZone } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport * as Mousetrap from 'mousetrap';\nvar hotkeys = {};\nvar hotkeyChangedSource = new Subject();\nvar isMac = /Mac|iPod|iPhone|iPad/.test(window.navigator.platform);\n/*tslint:disable*/\nvar map = {\n    command: '\\u2318',\n    shift: '\\u21E7',\n    left: '\\u2190',\n    right: '\\u2192',\n    up: '\\u2191',\n    down: '\\u2193',\n    'return': '\\u23CE',\n    backspace: '\\u232B' // âŒ«\n};\n/*tslint:enable*/\nfunction _getDisplay(combo) {\n    var keys = combo.split('+');\n    var result = [];\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n        var k = keys_1[_i];\n        if (k === 'mod') {\n            result.push(isMac ? map.command : 'ctrl');\n            continue;\n        }\n        var mapped = map[k];\n        result.push(mapped || k);\n    }\n    return result;\n}\nexport function _add(combo, opts) {\n    opts.status = opts.status || 'active';\n    opts.keys = _getDisplay(combo);\n    opts.visible = opts.visible !== undefined ? opts.visible : true;\n    Mousetrap.bind(combo, callback);\n    if (hotkeys[combo] === undefined) {\n        hotkeys[combo] = [];\n    }\n    hotkeys[combo].push(opts);\n    hotkeyChangedSource.next(hotkeys);\n    function callback(event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        }\n        else {\n            // internet explorer\n            event.returnValue = false;\n        }\n        if (opts && opts.status === 'active') {\n            opts.zone.run(function () {\n                opts.callback(event);\n            });\n        }\n    }\n}\nexport function _suspend(comp) {\n    for (var comb in hotkeys) {\n        var hotkeyList = hotkeys[comb];\n        for (var _i = 0, hotkeyList_1 = hotkeyList; _i < hotkeyList_1.length; _i++) {\n            var hotkey = hotkeyList_1[_i];\n            if (hotkey.component === comp) {\n                hotkey.status = 'suspended';\n            }\n        }\n    }\n    hotkeyChangedSource.next(hotkeys);\n}\nexport function _pauseOthers(comp) {\n    for (var comb in hotkeys) {\n        var hotkeyList = hotkeys[comb];\n        for (var _i = 0, hotkeyList_2 = hotkeyList; _i < hotkeyList_2.length; _i++) {\n            var hotkey = hotkeyList_2[_i];\n            if (hotkey.component !== comp) {\n                hotkey.status = \"*\" + hotkey.status;\n            }\n        }\n    }\n    hotkeyChangedSource.next(hotkeys);\n}\nexport function _unpauseOthers(comp) {\n    for (var comb in hotkeys) {\n        var hotkeyList = hotkeys[comb];\n        for (var _i = 0, hotkeyList_3 = hotkeyList; _i < hotkeyList_3.length; _i++) {\n            var hotkey = hotkeyList_3[_i];\n            if (hotkey.component !== comp && hotkey.status[0] === '*') {\n                hotkey.status = hotkey.status.replace('*', '');\n            }\n        }\n    }\n    hotkeyChangedSource.next(hotkeys);\n}\nexport function _activate(comp) {\n    for (var comb in hotkeys) {\n        var hotkeyList = hotkeys[comb];\n        for (var _i = 0, hotkeyList_4 = hotkeyList; _i < hotkeyList_4.length; _i++) {\n            var hotkey = hotkeyList_4[_i];\n            if (hotkey.component === comp) {\n                hotkey.status = 'active';\n            }\n        }\n    }\n    hotkeyChangedSource.next(hotkeys);\n}\nexport function _deregister(comp) {\n    for (var comb in hotkeys) {\n        var hotkeyList = hotkeys[comb];\n        for (var _i = 0, hotkeyList_5 = hotkeyList; _i < hotkeyList_5.length; _i++) {\n            var hotkey = hotkeyList_5[_i];\n            if (hotkey.component === comp) {\n                hotkeys[comb].status = 'disabled';\n                hotkeys[comb].splice(hotkeys[comb].indexOf(hotkey), 1);\n            }\n        }\n        if (!hotkeyList.length) {\n            Mousetrap.unbind(comb);\n        }\n    }\n    hotkeyChangedSource.next(hotkeys);\n}\nexport function Hotkey(key, description, options) {\n    return function (target, name, descriptor) {\n        var oldInit = target.ngOnInit;\n        target.ngOnInit = function () {\n            var _this = this;\n            if (oldInit)\n                oldInit.bind(this)();\n            _add(key, __assign({ callback: function () {\n                    target[name].bind(_this)();\n                }, description: description, component: this, zone: new NgZone({ enableLongStackTrace: false }) }, options));\n        };\n        var oldDestroy = target.ngOnDestroy;\n        target.ngOnDestroy = function () {\n            if (oldDestroy)\n                oldDestroy.bind(this)();\n            _deregister(this);\n        };\n    };\n}\nvar HotkeysService = /*@__PURE__*/ (function () {\n    function HotkeysService(ngZone) {\n        this.ngZone = ngZone;\n        this.hotkeys = hotkeys;\n        this.suspend = _suspend;\n        this.activate = _activate;\n        this.deregister = _deregister;\n        this.pauseOthers = _pauseOthers;\n        this.unpauseOthers = _unpauseOthers;\n        this.changeEvent = hotkeyChangedSource.asObservable();\n    }\n    HotkeysService.prototype.add = function (combo, opts) {\n        _add(combo, __assign({ zone: this.ngZone }, opts));\n    };\n    return HotkeysService;\n}());\nexport { HotkeysService };\n//# sourceMappingURL=hotkeys.service.js.map\n",null]}