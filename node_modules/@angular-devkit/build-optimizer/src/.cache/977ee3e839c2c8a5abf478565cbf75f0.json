{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\overlay\\overlay.service.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\overlay\\overlay.service.js","mtime":1527492758424},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Injectable, EventEmitter } from '@angular/core';\nimport { InjectionService } from '../../services';\nimport { OverlayComponent } from './overlay.component';\nvar OverlayService = /*@__PURE__*/ (function () {\n    function OverlayService(injectionService) {\n        this.injectionService = injectionService;\n        // list of components that will close by clicking the overlay\n        this.triggerComponents = [];\n        this.click = new EventEmitter();\n    }\n    Object.defineProperty(OverlayService.prototype, \"instance\", {\n        get: function () {\n            if (this.component)\n                return this.component.instance;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    OverlayService.prototype.show = function (options) {\n        if (options === void 0) {\n            options = {};\n        }\n        if (!this.component) {\n            this.component = this.injectComponent();\n            this.instance.click.subscribe(this.onClick.bind(this));\n        }\n        this.triggerComponents.push({\n            component: options.triggerComponent,\n            zIndex: options.zIndex\n        });\n        this.component.instance.visible = true;\n        this.updateZIndex();\n        return this.component;\n    };\n    OverlayService.prototype.hide = function () {\n        if (this.triggerComponents.length === 0) {\n            this.component.instance.visible = false;\n        }\n    };\n    OverlayService.prototype.destroy = function () {\n        var _this = this;\n        if (this.component) {\n            // destroy is called like this to trigger\n            // proper lifecycle events like animations\n            this.hide();\n            setTimeout(function () {\n                if (_this.component) {\n                    _this.component.destroy();\n                    _this.component = undefined;\n                }\n            }, 100);\n        }\n    };\n    OverlayService.prototype.injectComponent = function () {\n        return this.injectionService.appendComponent(OverlayComponent);\n    };\n    OverlayService.prototype.onClick = function () {\n        if (this.triggerComponents.length > 0) {\n            var lastIdx = this.triggerComponents.length - 1;\n            var triggerComponent = this.triggerComponents[lastIdx];\n            this.click.emit(triggerComponent.component);\n        }\n    };\n    OverlayService.prototype.removeTriggerComponent = function (component) {\n        var idx = this.triggerComponents.findIndex(function (c) { return c.component === component; });\n        if (idx !== -1) {\n            this.triggerComponents.splice(idx, 1);\n        }\n        this.updateZIndex();\n        if (this.triggerComponents.length === 0) {\n            this.destroy();\n        }\n    };\n    OverlayService.prototype.updateZIndex = function () {\n        if (this.triggerComponents.length === 0) {\n            return;\n        }\n        var indexes = this.triggerComponents.map(function (tc) { return tc.zIndex; });\n        var zIndex = Math.max.apply(Math, indexes) - 1;\n        this.instance.zIndex = zIndex;\n    };\n    return OverlayService;\n}());\nexport { OverlayService };\n//# sourceMappingURL=overlay.service.js.map\n",null]}