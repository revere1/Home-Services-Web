{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\checkbox\\checkbox.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\checkbox\\checkbox.component.js","mtime":1527492758318},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, EventEmitter, Output, forwardRef, HostBinding, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar CHKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return CheckboxComponent; }),\n    multi: true\n};\nvar nextId = 0;\nvar CheckboxComponent = /*@__PURE__*/ (function () {\n    function CheckboxComponent() {\n        this.id = \"checkbox-\" + ++nextId;\n        this.name = null;\n        this.tabindex = 0;\n        this.disabled = false;\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this._value = false;\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n        this.onChangeCallback = function (_) {\n            // placeholder\n        };\n    }\n    Object.defineProperty(CheckboxComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this.value !== value) {\n                this._value = value;\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    CheckboxComponent.prototype.onBlur = function (event) {\n        this.onTouchedCallback();\n    };\n    CheckboxComponent.prototype.onChange = function (event) {\n        this.toggle();\n    };\n    CheckboxComponent.prototype.toggle = function () {\n        this.value = !this.value;\n    };\n    CheckboxComponent.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    CheckboxComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    CheckboxComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    __decorate([\n        HostBinding('class.disabled'),\n        Input(),\n        __metadata(\"design:type\", Boolean)\n    ], CheckboxComponent.prototype, \"disabled\", void 0);\n    return CheckboxComponent;\n}());\nexport { CheckboxComponent };\n//# sourceMappingURL=checkbox.component.js.map\n",null]}