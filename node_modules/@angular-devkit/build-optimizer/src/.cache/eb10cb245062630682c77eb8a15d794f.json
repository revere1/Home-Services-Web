{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\button\\button.component.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\button\\button.component.js","mtime":1527490554624},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, ViewEncapsulation, HostBinding, HostListener } from '@angular/core';\nvar ButtonComponent = /*@__PURE__*/ (function () {\n    function ButtonComponent() {\n        this.disabled = false;\n        this.state = 'active'; // active, inProgress, success, fail\n        this.inProgress = false;\n        this.active = true;\n        this.success = false;\n        this.fail = false;\n        this._disabled = false;\n    }\n    ButtonComponent.prototype.ngOnInit = function () {\n        this.updateState();\n    };\n    ButtonComponent.prototype.ngOnChanges = function () {\n        this._disabled = this.disabled;\n        this.updateState();\n        this.updatePromise();\n    };\n    ButtonComponent.prototype.updatePromise = function () {\n        var _this = this;\n        if (this.promise !== undefined) {\n            this.state = 'inProgress';\n            this.updateState();\n            this.promise.then(function () {\n                _this.state = 'success';\n                _this.updateState();\n            }).catch(function (error) {\n                _this.state = 'fail';\n                _this.updateState();\n            });\n        }\n    };\n    ButtonComponent.prototype.updateState = function () {\n        var _this = this;\n        if (!this.state) {\n            this.state = 'active';\n        }\n        this.inProgress = false;\n        this.active = false;\n        this.success = false;\n        this.fail = false;\n        switch (this.state) {\n            case 'inProgress':\n                this.inProgress = true;\n                break;\n            case 'success':\n                this.success = true;\n                break;\n            case 'fail':\n                this.fail = true;\n                break;\n            default:\n                this.active = true;\n                break;\n        }\n        if (this.success || this.fail || this.inProgress) {\n            this._disabled = true;\n        }\n        if (this.success || this.fail) {\n            clearTimeout(this.lastTimeout);\n            this.lastTimeout = setTimeout(function () {\n                _this.state = 'active';\n                _this._disabled = _this.disabled;\n                _this.updateState();\n            }, 3000);\n        }\n    };\n    ButtonComponent.prototype.onClick = function (event) {\n        if (this._disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            return false;\n        }\n        return true;\n    };\n    return ButtonComponent;\n}());\nexport { ButtonComponent };\n//# sourceMappingURL=button.component.js.map\n",null]}