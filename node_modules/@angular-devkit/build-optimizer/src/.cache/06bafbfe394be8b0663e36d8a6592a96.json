{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\d3-scale\\src\\pow.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\d3-scale\\src\\pow.js","mtime":1527492764951},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import constant from \"./constant\";\r\nimport {linearish} from \"./linear\";\r\nimport {default as continuous, copy} from \"./continuous\";\r\n\r\nfunction raise(x, exponent) {\r\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\r\n}\r\n\r\nexport default function pow() {\r\n  var exponent = 1,\r\n      scale = continuous(deinterpolate, reinterpolate),\r\n      domain = scale.domain;\r\n\r\n  function deinterpolate(a, b) {\r\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\r\n        ? function(x) { return (raise(x, exponent) - a) / b; }\r\n        : constant(b);\r\n  }\r\n\r\n  function reinterpolate(a, b) {\r\n    b = raise(b, exponent) - (a = raise(a, exponent));\r\n    return function(t) { return raise(a + b * t, 1 / exponent); };\r\n  }\r\n\r\n  scale.exponent = function(_) {\r\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\r\n  };\r\n\r\n  scale.copy = function() {\r\n    return copy(scale, pow().exponent(exponent));\r\n  };\r\n\r\n  return linearish(scale);\r\n}\r\n\r\nexport function sqrt() {\r\n  return pow().exponent(0.5);\r\n}\r\n",null]}