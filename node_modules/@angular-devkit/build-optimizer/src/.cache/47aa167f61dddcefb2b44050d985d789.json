{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\toggle\\toggle.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\toggle\\toggle.component.js","mtime":1527492758474},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, HostBinding, forwardRef, ViewEncapsulation } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nvar TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return ToggleComponent; }),\n    multi: true\n};\nvar nextId = 0;\nvar ToggleComponent = /*@__PURE__*/ (function () {\n    function ToggleComponent() {\n        this.id = \"toggle-\" + ++nextId;\n        this.name = null;\n        this.disabled = false;\n        this.required = false;\n        this.tabIndex = 0;\n        this.change = new EventEmitter();\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n        this.onChangeCallback = function (_) {\n            // placeholder\n        };\n    }\n    Object.defineProperty(ToggleComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this.value !== value) {\n                this._value = value;\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToggleComponent.prototype, \"getHostCssClasses\", {\n        get: function () {\n            return 'ngx-toggle';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ToggleComponent.prototype, \"getDisabled\", {\n        get: function () {\n            return this.disabled ? 'disabled' : '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ToggleComponent.prototype.toggle = function () {\n        this.value = !this.value;\n    };\n    ToggleComponent.prototype.onBlur = function () {\n        this.onTouchedCallback();\n    };\n    ToggleComponent.prototype.onChange = function () {\n        var _this = this;\n        setTimeout(function () {\n            _this.onChangeCallback(_this._value);\n        });\n    };\n    ToggleComponent.prototype.writeValue = function (val) {\n        if (val !== this._value) {\n            this._value = val;\n        }\n    };\n    ToggleComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    ToggleComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    return ToggleComponent;\n}());\nexport { ToggleComponent };\n//# sourceMappingURL=toggle.component.js.map\n",null]}