{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\directives\\dbl-click-copy.directive.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\directives\\dbl-click-copy.directive.js","mtime":1527490603197},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Directive, Output, EventEmitter, HostListener, ElementRef, HostBinding } from '@angular/core';\nvar DblClickCopyDirective = /*@__PURE__*/ (function () {\n    function DblClickCopyDirective(element) {\n        this.element = element;\n        this.onCopy = new EventEmitter();\n    }\n    Object.defineProperty(DblClickCopyDirective.prototype, \"title\", {\n        get: function () {\n            return 'Double click to copy to clipboard';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DblClickCopyDirective.prototype.onDblClick = function (event) {\n        var selection = getSelection();\n        var range = document.createRange();\n        range.selectNodeContents(this.element.nativeElement);\n        selection.removeAllRanges();\n        selection.addRange(range);\n        document.execCommand('copy');\n        this.onCopy.emit(range);\n        console.log(\"Copied \" + range + \" to your clipboard!\");\n    };\n    return DblClickCopyDirective;\n}());\nexport { DblClickCopyDirective };\n//# sourceMappingURL=dbl-click-copy.directive.js.map\n",null]}