{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\dialog\\alert\\alert.service.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\dialog\\alert\\alert.service.js","mtime":1527490574171},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __extends } from \"tslib\";\nimport { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Injectable } from '@angular/core';\nimport { Subject } from 'rxjs/Subject';\nimport { InjectionService } from '../../../services';\nimport { OverlayService } from '../../overlay';\nimport { DialogService } from '../dialog.service';\nimport { AlertComponent } from './alert.component';\nimport { AlertTypes } from './alert.types';\nvar AlertService = /*@__PURE__*/ (function (_super) {\n    __extends(AlertService, _super);\n    function AlertService(injectionService, overlayService) {\n        var _this = _super.call(this, injectionService, overlayService) || this;\n        _this.defaults = {\n            inputs: {\n                zIndex: 991,\n                closeOnBlur: false,\n                closeOnEscape: false,\n                closeButton: false,\n                showOverlay: true,\n                visible: true\n            }\n        };\n        _this.type = AlertComponent;\n        _this.clsMap = {\n            danger: 'ngx-alert-danger',\n            warning: 'ngx-alert-warning',\n            info: 'ngx-alert-info'\n        };\n        return _this;\n    }\n    AlertService.prototype.alert = function (props) {\n        return this.createDialog(props, AlertTypes.alert);\n    };\n    AlertService.prototype.confirm = function (props) {\n        return this.createDialog(props, AlertTypes.confirm);\n    };\n    AlertService.prototype.prompt = function (props) {\n        return this.createDialog(props, AlertTypes.prompt);\n    };\n    AlertService.prototype.createDialog = function (props, type) {\n        var subject = new Subject();\n        var title = props.title, content = props.content;\n        var cssClass = 'ngx-alert-dialog ' + this.clsMap[props.style];\n        var component = this.create({\n            title: title,\n            content: content,\n            type: type,\n            cssClass: cssClass\n        });\n        var list = component.instance.ok.subscribe(function (data) {\n            subject.next({\n                type: 'ok',\n                data: data\n            });\n            subject.complete();\n            list.unsubscribe();\n            list2.unsubscribe();\n        });\n        var list2 = component.instance.cancel.subscribe(function (data) {\n            subject.next({\n                type: 'cancel',\n                data: data\n            });\n            subject.complete();\n            list.unsubscribe();\n            list2.unsubscribe();\n        });\n        return subject;\n    };\n    return AlertService;\n}(DialogService));\nexport { AlertService };\n//# sourceMappingURL=alert.service.js.map\n",null]}