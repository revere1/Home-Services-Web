{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\rxjs\\operators\\race.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\rxjs\\operators\\race.js","mtime":1527492784756},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["\"use strict\";\r\nvar isArray_1 = require('../util/isArray');\r\nvar race_1 = require('../observable/race');\r\n/* tslint:enable:max-line-length */\r\n/**\r\n * Returns an Observable that mirrors the first source Observable to emit an item\r\n * from the combination of this Observable and supplied Observables.\r\n * @param {...Observables} ...observables Sources used to race for which Observable emits first.\r\n * @return {Observable} An Observable that mirrors the output of the first Observable to emit an item.\r\n * @method race\r\n * @owner Observable\r\n */\r\nfunction race() {\r\n    var observables = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        observables[_i - 0] = arguments[_i];\r\n    }\r\n    return function raceOperatorFunction(source) {\r\n        // if the only argument is an array, it was most likely called with\r\n        // `pair([obs1, obs2, ...])`\r\n        if (observables.length === 1 && isArray_1.isArray(observables[0])) {\r\n            observables = observables[0];\r\n        }\r\n        return source.lift.call(race_1.race.apply(void 0, [source].concat(observables)));\r\n    };\r\n}\r\nexports.race = race;\r\n//# sourceMappingURL=race.js.map",null]}