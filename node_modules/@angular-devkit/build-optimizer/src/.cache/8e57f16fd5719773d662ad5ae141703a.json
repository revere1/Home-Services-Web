{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\utils\\throttle.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\utils\\throttle.js","mtime":1527492757693},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["/**\r\n * Throttle a function\r\n *\r\n * @export\r\n * @param {*}      func\r\n * @param {number} wait\r\n * @param {*}      [options]\r\n * @returns\r\n */\r\nexport function throttle(func, wait, options) {\r\n    options = options || {};\r\n    var context;\r\n    var args;\r\n    var result;\r\n    var timeout = null;\r\n    var previous = 0;\r\n    function later() {\r\n        previous = options.leading === false ? 0 : +new Date();\r\n        timeout = null;\r\n        result = func.apply(context, args);\r\n    }\r\n    return function () {\r\n        var now = +new Date();\r\n        if (!previous && options.leading === false) {\r\n            previous = now;\r\n        }\r\n        var remaining = wait - (now - previous);\r\n        context = this;\r\n        args = arguments;\r\n        if (remaining <= 0) {\r\n            clearTimeout(timeout);\r\n            timeout = null;\r\n            previous = now;\r\n            result = func.apply(context, args);\r\n        }\r\n        else if (!timeout && options.trailing !== false) {\r\n            timeout = setTimeout(later, remaining);\r\n        }\r\n        return result;\r\n    };\r\n}\r\n/**\r\n * Throttle decorator\r\n *\r\n *  class MyClass {\r\n *    throttleable(10)\r\n *    myFn() { ... }\r\n *  }\r\n *\r\n * @export\r\n * @param {number} duration\r\n * @param {*} [options]\r\n * @returns\r\n */\r\nexport function throttleable(duration, options) {\r\n    return function innerDecorator(target, key, descriptor) {\r\n        return {\r\n            configurable: true,\r\n            enumerable: descriptor.enumerable,\r\n            get: function getter() {\r\n                Object.defineProperty(this, key, {\r\n                    configurable: true,\r\n                    enumerable: descriptor.enumerable,\r\n                    value: throttle(descriptor.value, duration, options)\r\n                });\r\n                return this[key];\r\n            }\r\n        };\r\n    };\r\n}\r\n//# sourceMappingURL=throttle.js.map",null]}