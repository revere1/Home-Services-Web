{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\services\\injection-registery.service.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\services\\injection-registery.service.js","mtime":1527490620455},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["var __assign = (this && this.__assign) || Object.assign || function (t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s)\r\n            if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nvar InjectionRegisteryService = /*@__PURE__*/ (function () {\r\n    function InjectionRegisteryService(injectionService) {\r\n        this.injectionService = injectionService;\r\n        this.defaults = {};\r\n        this.components = new Map();\r\n    }\r\n    InjectionRegisteryService.prototype.getByType = function (type) {\r\n        if (type === void 0) {\r\n            type = this.type;\r\n        }\r\n        return this.components.get(type);\r\n    };\r\n    InjectionRegisteryService.prototype.create = function (bindings) {\r\n        return this.createByType(this.type, bindings);\r\n    };\r\n    InjectionRegisteryService.prototype.createByType = function (type, bindings) {\r\n        bindings = this.assignDefaults(bindings);\r\n        var component = this.injectComponent(type, bindings);\r\n        this.register(type, component);\r\n        return component;\r\n    };\r\n    InjectionRegisteryService.prototype.destroy = function (instance) {\r\n        var compsByType = this.components.get(instance.componentType);\r\n        if (compsByType && compsByType.length) {\r\n            var idx = compsByType.indexOf(instance);\r\n            if (idx > -1) {\r\n                var component = compsByType[idx];\r\n                component.destroy();\r\n                compsByType.splice(idx, 1);\r\n            }\r\n        }\r\n    };\r\n    InjectionRegisteryService.prototype.destroyAll = function () {\r\n        this.destroyByType(this.type);\r\n    };\r\n    InjectionRegisteryService.prototype.destroyByType = function (type) {\r\n        var comps = this.components.get(type);\r\n        if (comps && comps.length) {\r\n            var i = comps.length - 1;\r\n            while (i >= 0) {\r\n                this.destroy(comps[i--]);\r\n            }\r\n        }\r\n    };\r\n    InjectionRegisteryService.prototype.injectComponent = function (type, bindings) {\r\n        return this.injectionService.appendComponent(type, bindings);\r\n    };\r\n    InjectionRegisteryService.prototype.assignDefaults = function (bindings) {\r\n        var inputs = __assign({}, this.defaults.inputs);\r\n        var outputs = __assign({}, this.defaults.outputs);\r\n        if (!bindings.inputs && !bindings.outputs) {\r\n            bindings = { inputs: bindings };\r\n        }\r\n        if (inputs) {\r\n            bindings.inputs = __assign({}, inputs, bindings.inputs);\r\n        }\r\n        if (outputs) {\r\n            bindings.outputs = __assign({}, outputs, bindings.outputs);\r\n        }\r\n        return bindings;\r\n    };\r\n    InjectionRegisteryService.prototype.register = function (type, component) {\r\n        if (!this.components.has(type)) {\r\n            this.components.set(type, []);\r\n        }\r\n        var types = this.components.get(type);\r\n        types.push(component);\r\n    };\r\n    return InjectionRegisteryService;\r\n}());\r\nexport { InjectionRegisteryService };\r\n//# sourceMappingURL=injection-registery.service.js.map\r\n",null]}