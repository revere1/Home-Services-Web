{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\codemirror\\mode\\spreadsheet\\spreadsheet.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\codemirror\\mode\\spreadsheet\\spreadsheet.js","mtime":1527492763076},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\r\n// Distributed under an MIT license: http://codemirror.net/LICENSE\r\n\r\n(function(mod) {\r\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\r\n    mod(require(\"../../lib/codemirror\"));\r\n  else if (typeof define == \"function\" && define.amd) // AMD\r\n    define([\"../../lib/codemirror\"], mod);\r\n  else // Plain browser env\r\n    mod(CodeMirror);\r\n})(function(CodeMirror) {\r\n  \"use strict\";\r\n\r\n  CodeMirror.defineMode(\"spreadsheet\", function () {\r\n    return {\r\n      startState: function () {\r\n        return {\r\n          stringType: null,\r\n          stack: []\r\n        };\r\n      },\r\n      token: function (stream, state) {\r\n        if (!stream) return;\r\n\r\n        //check for state changes\r\n        if (state.stack.length === 0) {\r\n          //strings\r\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\r\n            state.stringType = stream.peek();\r\n            stream.next(); // Skip quote\r\n            state.stack.unshift(\"string\");\r\n          }\r\n        }\r\n\r\n        //return state\r\n        //stack has\r\n        switch (state.stack[0]) {\r\n        case \"string\":\r\n          while (state.stack[0] === \"string\" && !stream.eol()) {\r\n            if (stream.peek() === state.stringType) {\r\n              stream.next(); // Skip quote\r\n              state.stack.shift(); // Clear flag\r\n            } else if (stream.peek() === \"\\\\\") {\r\n              stream.next();\r\n              stream.next();\r\n            } else {\r\n              stream.match(/^.[^\\\\\\\"\\']*/);\r\n            }\r\n          }\r\n          return \"string\";\r\n\r\n        case \"characterClass\":\r\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\r\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\r\n              state.stack.shift();\r\n          }\r\n          return \"operator\";\r\n        }\r\n\r\n        var peek = stream.peek();\r\n\r\n        //no stack\r\n        switch (peek) {\r\n        case \"[\":\r\n          stream.next();\r\n          state.stack.unshift(\"characterClass\");\r\n          return \"bracket\";\r\n        case \":\":\r\n          stream.next();\r\n          return \"operator\";\r\n        case \"\\\\\":\r\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\r\n          else {\r\n            stream.next();\r\n            return \"atom\";\r\n          }\r\n        case \".\":\r\n        case \",\":\r\n        case \";\":\r\n        case \"*\":\r\n        case \"-\":\r\n        case \"+\":\r\n        case \"^\":\r\n        case \"<\":\r\n        case \"/\":\r\n        case \"=\":\r\n          stream.next();\r\n          return \"atom\";\r\n        case \"$\":\r\n          stream.next();\r\n          return \"builtin\";\r\n        }\r\n\r\n        if (stream.match(/\\d+/)) {\r\n          if (stream.match(/^\\w+/)) return \"error\";\r\n          return \"number\";\r\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\r\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\r\n          return \"variable-2\";\r\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\r\n          stream.next();\r\n          return \"bracket\";\r\n        } else if (!stream.eatSpace()) {\r\n          stream.next();\r\n        }\r\n        return null;\r\n      }\r\n    };\r\n  });\r\n\r\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\r\n});\r\n",null]}