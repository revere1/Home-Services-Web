{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\radiobutton\\radiobutton.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\radiobutton\\radiobutton.component.js","mtime":1527492758429},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { __param } from \"tslib\";\nimport { Component, Input, EventEmitter, Output, forwardRef, HostBinding, ViewEncapsulation, Optional } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { RadioButtonGroupComponent } from './radiobutton-group.component';\nvar CHKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(function () { return RadioButtonComponent; }),\n    multi: true\n};\nvar nextId = 0;\nvar RadioButtonComponent = /*@__PURE__*/ (function () {\n    function RadioButtonComponent(radioGroup) {\n        this.radioGroup = radioGroup;\n        this._uniqueId = \"ngx-radio-\" + ++nextId;\n        this.id = this._uniqueId;\n        this.name = this._uniqueId;\n        this.tabindex = 0;\n        this.change = new EventEmitter();\n        this.blur = new EventEmitter();\n        this.focus = new EventEmitter();\n        this._checked = false;\n        this._value = false;\n        this._disabled = false;\n        this.onChangeCallback = function (_) {\n            // placeholder\n        };\n        this.onTouchedCallback = function () {\n            // placeholder\n        };\n        this.radioGroup = radioGroup;\n    }\n    Object.defineProperty(RadioButtonComponent.prototype, \"checked\", {\n        get: function () {\n            return this._checked;\n        },\n        set: function (value) {\n            value = !!value;\n            if (this._checked !== value) {\n                this._checked = value;\n                if (this._checked && this.radioGroup && this.radioGroup.value !== this.value) {\n                    this.radioGroup.value = this.value;\n                }\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioButtonComponent.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            if (this.value !== value) {\n                this._value = value;\n                if (this.radioGroup) {\n                    this._checked = this.radioGroup.value === this.value;\n                }\n                this.onChangeCallback(this._value);\n            }\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(RadioButtonComponent.prototype, \"disabled\", {\n        get: function () {\n            return this._disabled || (this.radioGroup != null && this.radioGroup.disabled);\n        },\n        set: function (value) {\n            this._disabled = !!value;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    RadioButtonComponent.prototype.ngOnInit = function () {\n        if (this.radioGroup) {\n            this.checked = this.radioGroup.value === this._value;\n            this.name = this.radioGroup.name;\n        }\n    };\n    RadioButtonComponent.prototype._onInputChange = function (event) {\n        event.stopPropagation();\n        this.change.emit(event);\n        this.checked = true;\n        if (this.radioGroup) {\n            this.radioGroup.value = this.value;\n        }\n    };\n    RadioButtonComponent.prototype.writeValue = function (value) {\n        this.value = value;\n    };\n    RadioButtonComponent.prototype.registerOnChange = function (fn) {\n        this.onChangeCallback = fn;\n    };\n    RadioButtonComponent.prototype.registerOnTouched = function (fn) {\n        this.onTouchedCallback = fn;\n    };\n    __decorate([\n        Input(),\n        HostBinding('class.disabled'),\n        __metadata(\"design:type\", Boolean),\n        __metadata(\"design:paramtypes\", [Boolean])\n    ], RadioButtonComponent.prototype, \"disabled\", null);\n    RadioButtonComponent = __decorate([\n        __param(0, Optional())\n    ], RadioButtonComponent);\n    return RadioButtonComponent;\n}());\nexport { RadioButtonComponent };\n//# sourceMappingURL=radiobutton.component.js.map\n",null]}