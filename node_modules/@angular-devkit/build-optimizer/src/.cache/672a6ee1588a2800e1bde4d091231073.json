{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\input\\validators\\max-value.directive.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\input\\validators\\max-value.directive.js","mtime":1527490588199},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Directive, Input, forwardRef } from '@angular/core';\nimport { NG_VALIDATORS, Validators } from '@angular/forms';\nvar MAX_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(function () { return MaxValidatorDirective; }),\n    multi: true\n};\nvar MaxValidatorDirective = /*@__PURE__*/ (function () {\n    function MaxValidatorDirective() {\n    }\n    MaxValidatorDirective.prototype.validate = function (c) {\n        if (this.type !== 'number') {\n            return null;\n        }\n        return Validators.max(this.max)(c);\n    };\n    return MaxValidatorDirective;\n}());\nexport { MaxValidatorDirective };\n//# sourceMappingURL=max-value.directive.js.map\n",null]}