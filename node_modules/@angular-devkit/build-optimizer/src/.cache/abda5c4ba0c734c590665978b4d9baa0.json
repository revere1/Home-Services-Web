{"remainingRequest":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\split\\split-area.directive.js","dependencies":[{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@swimlane\\ngx-ui\\release\\components\\split\\split-area.directive.js","mtime":1527490597888},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527490505816},{"path":"D:\\xampp\\htdocs\\smartkarma\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1525376550000}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { __param } from \"tslib\";\nimport { Directive, ChangeDetectionStrategy, Optional, Self, HostBinding, Input } from '@angular/core';\nimport { FlexDirective, validateBasis } from '@angular/flex-layout';\nvar SplitAreaDirective = /*@__PURE__*/ (function () {\n    function SplitAreaDirective(flexDirective) {\n        this.flexDirective = flexDirective;\n    }\n    SplitAreaDirective.isPercent = function (basis) {\n        var hasCalc = String(basis).indexOf('calc') > -1;\n        return String(basis).indexOf('%') > -1 && !hasCalc;\n    };\n    SplitAreaDirective.basisToValue = function (basis) {\n        if (typeof basis === 'string') {\n            return Number(basis.replace('%', '').replace('px', ''));\n        }\n        return basis;\n    };\n    Object.defineProperty(SplitAreaDirective.prototype, \"cssClass\", {\n        get: function () { return true; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(SplitAreaDirective.prototype, \"fxFlexFill\", {\n        get: function () {\n            return this.fxFlex === '';\n        },\n        enumerable: true,\n        configurable: true\n    });\n    SplitAreaDirective.prototype.getFlexParts = function () {\n        var flex = this.flexDirective;\n        var basis = flex._queryInput('flex') || '1 1 1e-9px';\n        return validateBasis(String(basis).replace(';', ''), flex._queryInput('grow'), flex._queryInput('shrink'));\n    };\n    SplitAreaDirective.prototype.getInputFlexParts = function () {\n        var flex = this.flexDirective;\n        var basis = this.fxFlex || '1 1 1e-9px';\n        return validateBasis(String(basis).replace(';', ''), flex._queryInput('grow'), flex._queryInput('shrink'));\n    };\n    SplitAreaDirective.prototype.updateStyle = function (flexBasis) {\n        var flex = this.flexDirective;\n        if (typeof flexBasis === 'undefined') {\n            flexBasis = flex._queryInput('flex') || '';\n        }\n        if (typeof flexBasis === 'number') {\n            flexBasis = this.isPercent() ? flexBasis + \"%\" : flexBasis + \"px\";\n        }\n        var grow = flex._queryInput('grow');\n        var shrink = flex._queryInput('shrink');\n        if (flexBasis.indexOf(' ') < 0) {\n            flexBasis = [grow, shrink, flexBasis].join(' ');\n        }\n        flex._cacheInput('flex', flexBasis);\n        flex._updateStyle(flexBasis);\n    };\n    SplitAreaDirective.prototype.isPercent = function (basis) {\n        if (!basis) {\n            var flex = this.flexDirective;\n            basis = flex._queryInput('flex') || '1 1 1e-9px';\n        }\n        var hasCalc = String(basis).indexOf('calc') > -1;\n        return String(basis).indexOf('%') > -1 && !hasCalc;\n    };\n    SplitAreaDirective = __decorate([\n        __param(0, Optional()), __param(0, Self())\n    ], SplitAreaDirective);\n    return SplitAreaDirective;\n}());\nexport { SplitAreaDirective };\n//# sourceMappingURL=split-area.directive.js.map\n",null]}