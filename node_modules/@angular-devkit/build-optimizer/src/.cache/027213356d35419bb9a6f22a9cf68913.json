{"remainingRequest":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\common\\legend\\advanced-legend.component.js","dependencies":[{"path":"D:\\Ramesh\\revere\\node_modules\\@swimlane\\ngx-charts\\release\\common\\legend\\advanced-legend.component.js","mtime":1527492757508},{"path":"D:\\Ramesh\\revere\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1527492760843},{"path":"D:\\Ramesh\\revere\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1527492734929}],"contextDependencies":[],"result":["import { __decorate } from \"tslib\";\nimport { __metadata } from \"tslib\";\nimport { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ViewEncapsulation } from '@angular/core';\nimport { trimLabel } from '../trim-label.helper';\nimport { formatLabel } from '../label.helper';\nvar AdvancedLegendComponent = /*@__PURE__*/ (function () {\n    function AdvancedLegendComponent() {\n        this.label = 'Total';\n        this.animations = true;\n        this.select = new EventEmitter();\n        this.activate = new EventEmitter();\n        this.deactivate = new EventEmitter();\n        this.legendItems = [];\n    }\n    AdvancedLegendComponent.prototype.ngOnChanges = function (changes) {\n        this.update();\n    };\n    AdvancedLegendComponent.prototype.getTotal = function () {\n        return this.data\n            .map(function (d) { return d.value; })\n            .reduce(function (sum, d) { return sum + d; }, 0);\n    };\n    AdvancedLegendComponent.prototype.update = function () {\n        this.total = this.getTotal();\n        this.roundedTotal = this.total;\n        this.legendItems = this.getLegendItems();\n    };\n    AdvancedLegendComponent.prototype.getLegendItems = function () {\n        var _this = this;\n        return this.data.map(function (d, index) {\n            var label = formatLabel(d.name);\n            var value = d.value;\n            var percentage = (_this.total > 0) ? value / _this.total * 100 : 0;\n            var color = _this.colors.getColor(label);\n            return {\n                value: value,\n                color: color,\n                label: trimLabel(label, 20),\n                originalLabel: d.name,\n                percentage: percentage\n            };\n        });\n    };\n    AdvancedLegendComponent.prototype.trackBy = function (item) {\n        return item.formattedLabel;\n    };\n    return AdvancedLegendComponent;\n}());\nexport { AdvancedLegendComponent };\n//# sourceMappingURL=advanced-legend.component.js.map\n",null]}